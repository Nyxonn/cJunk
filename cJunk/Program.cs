using System;
using System.IO;

namespace cJunk
{
    class Program
    {
        static void Main()
        {
            Console.Title = "cJunk - C# Junk Code generator by goldblack";
            Console.ForegroundColor = ConsoleColor.Yellow;
            Console.Write("Your cs file: ");
            Console.ForegroundColor = ConsoleColor.Green;
            string file = Console.ReadLine();
            if (file.Contains(".cs"))
            {
                AfterFileInput(file);
            }
            else
            {
                file += ".cs";
                AfterFileInput(file);
            }
        }

        static void AfterFileInput(string file)
        {
            Console.ForegroundColor = ConsoleColor.Yellow;
            Console.Write("Threads [threads * 5]: ");
            Console.ForegroundColor = ConsoleColor.Green;
            string threads = Console.ReadLine();
            Console.WriteLine("");
            string fileinterior = File.ReadAllText(file);
            Generator(fileinterior, threads);
        }
        private static Random randomNum = new Random();
        static void Generator(string interior, string threads)
        {
            int threadsINT = Int32.Parse(threads);
            using (StreamWriter WriteAndGen = new StreamWriter("junked.cs"))
            {
                WriteAndGen.WriteLine(interior);
                for (int i = 0; i < threadsINT; i++)
                {
                    //string
                    WriteAndGen.WriteLine("//Generated by cJunk");
                    WriteAndGen.Write("public class " + RandomString() + "{\n " + "void " + RandomString() + "()" + "{ ");

                    string stringA = RandomString();
                    string stringB = RandomString();
                    WriteAndGen.Write("string " + stringA + " = \"" + RandomString() + "\";");
                    WriteAndGen.Write("string " + stringB + " = \"" + RandomString() + "\";");
                    WriteAndGen.Write(stringA + " = \"" + RandomString() + "\";");
                    WriteAndGen.Write(stringA + " = " + stringB + ";");

                    WriteAndGen.Write("}}");
                    WriteAndGen.WriteLine("\n");

                    //int32
                    WriteAndGen.WriteLine("//Generated by cJunk");
                    WriteAndGen.Write("public class " + RandomString() + "{\n " + "void " + RandomString() + "()" + "{ ");

                    string int32A = RandomString();
                    string int32B = RandomString();
                    WriteAndGen.Write("Int32 " + int32A + " = -" + randomNum.Next(1000000, 99999999) + ";");
                    WriteAndGen.Write("Int32 " + int32B + " = -" + randomNum.Next(1000000, 99999999) + ";");
                    WriteAndGen.Write(int32A + " = -" + randomNum.Next(1000000, 99999999) + ";");
                    WriteAndGen.Write(int32A + " = " + int32B + ";");

                    WriteAndGen.Write("}}");
                    WriteAndGen.WriteLine("\n");

                    //float
                    WriteAndGen.WriteLine("//Generated by cJunk");
                    WriteAndGen.Write("public class " + RandomString() + "{\n " + "void " + RandomString() + "()" + "{ ");

                    string floatA = RandomString();
                    string floatB = RandomString();
                    WriteAndGen.Write("float " + floatA + " = -" + randomNum.Next(1000000, 99999999) + ".0f;");
                    WriteAndGen.Write("float " + floatB + " = -" + randomNum.Next(1000000, 99999999) + ".0f;");
                    WriteAndGen.Write(floatA + " = -" + randomNum.Next(1000000, 99999999) + ".0f;");
                    WriteAndGen.Write(floatA + " = " + floatB + ";");

                    WriteAndGen.Write("}}");
                    WriteAndGen.WriteLine("\n");

                    //int
                    WriteAndGen.WriteLine("//Generated by cJunk");
                    WriteAndGen.Write("public class " + RandomString() + "{\n " + "void " + RandomString() + "()" + "{ ");

                    string intA = RandomString();
                    string intB = RandomString();
                    WriteAndGen.Write("int " + intA + " = -" + randomNum.Next(1000000, 99999999) + ";");
                    WriteAndGen.Write("int " + intB + " = -" + randomNum.Next(1000000, 99999999) + ";");
                    WriteAndGen.Write(intA + " = -" + randomNum.Next(1000000, 99999999) + ";");
                    WriteAndGen.Write(intA + " = " + intB + ";");

                    WriteAndGen.Write("}}");
                    WriteAndGen.WriteLine("\n");

                    //boolean
                    WriteAndGen.WriteLine("//Generated by cJunk");
                    WriteAndGen.Write("public class " + RandomString() + "{\n " + "void " + RandomString() + "()" + "{ ");

                    string boolA = RandomString();
                    string boolB = RandomString();
                    WriteAndGen.Write("bool " + boolA + " = true;");
                    WriteAndGen.Write("bool " + boolB + " = false;");
                    WriteAndGen.Write(boolA + " = false;");
                    WriteAndGen.Write(boolA + " = " + boolB + ";");

                    WriteAndGen.Write("}}");
                    WriteAndGen.WriteLine("\n");
                }
            }
        }

        private static Random _random = new Random();
        private static Random random = new Random();
        static string RandomString()
        {
            var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
            int chance = _random.Next(20, 100);
            var stringChars = new char[chance];
            for (int i = 0; i < stringChars.Length; i++)
            {
                stringChars[i] = chars[random.Next(chars.Length)];
            }
            var finalString = new String(stringChars);
            return finalString;
        }
    }
}
